[comment encoding = UTF-8 /]
[module class('http://www.eclipse.org/uml2/5.0.0/UML')]

[import org::datafoodconsortium::connector::codegen::queries /]
[import org::datafoodconsortium::connector::codegen::typescript::common /]
[import org::datafoodconsortium::connector::codegen::typescript::operation /]

[template public generateClass(model: Model, aClass : Class)]
[file (getProperty('typescript_outputFolder_src') + aClass.name.concat('.ts'), false, 'UTF-8')]
[generateLicense()/]
[generateImports(aClass) /]
import IConnector from "./IConnector.js";

export default [if (aClass.isAbstract)]abstract [/if]class [aClass.name.toUpperFirst()/] [generateGeneralization(aClass)/][generateInterfaceRealizationHeader(aClass)/]{['\n'/]
	[if (aClass.generalization->isEmpty())]
	protected connector: IConnector;['\n'/]
	[/if]
	[for (operation: Operation | aClass.ownedOperation) separator('\n')]
	[if (operation.isAbstract)][generateOperationSignature(aClass, operation)/][else][generateOperationImplementation(aClass, operation)/][/if]
	[/for]
	// TODO
}
[/file]
[/template]

[template public generateGeneralization(classifier: Classifier)]
extends [for (generalization: Generalization | classifier.generalization) separator(', ')][generalization.general.name/][/for][if (classifier.generalization->isEmpty())][if (classifier.isSemantic())]SemanticObject[if (classifier.isBlankNode())]Anonymous[/if][/if][/if] 
[/template]

[template public generateInterfaceRealizationHeader(aClass: Class)]
[if not (aClass.interfaceRealization->isEmpty())]implements [for (interface: InterfaceRealization | aClass.interfaceRealization) separator(', ')][interface.contract.name/][/for] [/if]
[/template]
